{"version":3,"sources":["constants/types.js","helpers.js","reducers/imageReducer.js","reducers/categoryReducer.js","reducers/settingsReducer.js","reducers/index.js","store/index.js","components/MainMenu/index.js","actions/index.js","components/Categories/index.js","components/MasonryGallery/index.js","components/Wrapper/index.js","components/App.js","index.js"],"names":["LOAD_IMAGES","LOAD_CATEGORIES","CHANGE_OBSERVABLE_CATEGORY","START","SUCCESS","FAILED","arrToMap","arr","RecordModel","arguments","length","undefined","Map","reduce","acc","item","set","id","OrderedMap","mapToArr","obj","valueSeq","toArray","ImageRecord","Record","breeds","categories","url","width","height","defaultState","entities","loading","loaded","CategoryRecord","name","observableCategory","combineReducers","images","state","action","type","payload","update","merge","response","data","settings","enhancer","applyMiddleware","thunk","store","createStore","reducers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","MainMenu","react_default","a","createElement","className","href","src","alt","title","target","rel","Component","APIUrl","request10ImagesByCategory","dispatch","axios","get","concat","then","catch","error","Categories","getBody","_this$props","_this","props","size","getCategories","_this$props2","sort","b","map","category","key","onClick","onClickHandler","changeObservableCategory","filter","image","this","requestCategories","connect","MasonryGallery","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","react","getImages","getLoadButton","ref","galleryEnd","scrollToBottom","current","scrollIntoView","behavior","React","createRef","prevProps","prevState","snapshot","Wrapper","components_Categories","components_MasonryGallery","components_MainMenu","App","es","components_Wrapper","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c0388b0.chunk.js","sourcesContent":["export const LOAD_IMAGES = \"LOAD_IMAGES\";\r\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\r\nexport const LOAD_CATEGORIES = \"LOAD_CATEGORIES\";\r\nexport const CHANGE_OBSERVABLE_CATEGORY = \"CHANGE_OBSERVABLE_CATEGORY\";\r\n\r\nexport const START = \"_START\";\r\nexport const SUCCESS = \"_SUCCESS\";\r\nexport const FAILED = \"_FAILED\";","import { Map, OrderedMap } from 'immutable';\r\n\r\nexport function arrToMap( arr, RecordModel = Map ){\r\n    return arr.reduce((acc, item) =>\r\n        acc.set(item.id, new RecordModel(item))\r\n    , new OrderedMap({}));\r\n}\r\n\r\nexport function mapToArr( obj ){\r\n    return obj.valueSeq().toArray();\r\n}","import { Record, OrderedMap } from 'immutable';\r\nimport {\r\n    LOAD_IMAGES,\r\n    START,\r\n    SUCCESS,\r\n    FAILED\r\n} from '../constants/types';\r\nimport { arrToMap } from \"../helpers\";\r\n\r\nconst ImageRecord = Record({\r\n    id: null,\r\n    breeds: [],\r\n    categories: [],\r\n    url: null,\r\n    width: null,\r\n    height: null\r\n});\r\n\r\nconst ReducerState = Record({\r\n    entities: new OrderedMap(arrToMap([], ImageRecord)),\r\n    loading: false,\r\n    loaded: false\r\n});\r\n\r\nconst defaultState = new ReducerState();\r\n\r\nexport default (state = defaultState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch(type){\r\n        case  LOAD_IMAGES + START:\r\n            return state\r\n                .set('loading', true)\r\n                .set('loaded', false);\r\n\r\n        case  LOAD_IMAGES + SUCCESS:\r\n            return state\r\n                .update('entities', entities => entities.merge(arrToMap(payload.response.data, ImageRecord)))\r\n                .set('loading', false)\r\n                .set('loaded', true);\r\n\r\n        case  LOAD_IMAGES + FAILED:\r\n            return state\r\n                .set('loading', false)\r\n                .set('loaded', false);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Record, OrderedMap } from 'immutable';\r\nimport { LOAD_CATEGORIES,START,SUCCESS,FAILED } from '../constants/types';\r\nimport { arrToMap } from \"../helpers\";\r\n\r\nconst CategoryRecord = Record({\r\n    id: null,\r\n    name: null\r\n});\r\n\r\nconst ReducerState = Record({\r\n    entities: new OrderedMap(arrToMap([], CategoryRecord)),\r\n    loading: false,\r\n    loaded: false\r\n});\r\n\r\nconst defaultState = new ReducerState();\r\n\r\nexport default (state = defaultState, action) => {\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case  LOAD_CATEGORIES + START:\r\n            return state\r\n                .set('loading', true)\r\n                .set('loaded', false);\r\n\r\n        case  LOAD_CATEGORIES + SUCCESS:\r\n            return state.update('entities', entities => entities.merge(arrToMap(payload.response.data, CategoryRecord)))\r\n                .set('loading', false)\r\n                .set('loaded', true);\r\n\r\n        case  LOAD_CATEGORIES + FAILED:\r\n            return state\r\n                .set('loading', false)\r\n                .set('loaded', false);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Record } from 'immutable';\r\nimport { CHANGE_OBSERVABLE_CATEGORY } from '../constants/types';\r\n\r\n\r\n\r\nconst ReducerState = Record({\r\n    observableCategory: null,\r\n});\r\n\r\nconst defaultState = new ReducerState();\r\n\r\nexport default (state = defaultState, action) => {\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case  CHANGE_OBSERVABLE_CATEGORY:\r\n            return state\r\n                .set('observableCategory', payload.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport imageReducer from './imageReducer';\r\nimport categoryReducer from './categoryReducer';\r\nimport settingsReducer from './settingsReducer';\r\n\r\nexport default combineReducers({\r\n    images: imageReducer,\r\n    categories: categoryReducer,\r\n    settings: settingsReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from '../reducers';\r\n\r\nconst enhancer = applyMiddleware(\r\n    thunk\r\n);\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    compose(enhancer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\n\r\n// Dev ONLY!\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Component} from 'react';\r\n\r\nclass MainMenu extends Component {\r\n    render() {\r\n        return (\r\n            <div className={'mainmenu'}>\r\n                <div className={'mainmenu--top'}>\r\n                    <a href=\"/\">\r\n                        <div><img src=\"./assets/image/icon/paw-print.png\" alt=\"Pawterest Logo\" className={'logo'}/></div>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className={'mainmenu--middle'}>\r\n                    <div><img src=\"./assets/image/icon/house-white.png\" alt=\"White house\" title=\"My Feed (Under construction)\"/></div>\r\n                    <div><img src=\"./assets/image/icon/folder-white.png\" alt=\"White folder\" title=\"My Collection (Under construction)\"/></div>\r\n                    <div><img src=\"./assets/image/icon/cog-white.png\" alt=\"White cog\" title=\"Feed Settings (Under construction)\"/></div>\r\n                </div>\r\n                <div className={'mainmenu--bottom'}>\r\n                    <a href=\"https://github.com/Shubat-Max/pawterest\" target=\"_blank\" rel=\"noopener noreferrer\"><div><img src=\"./assets/image/icon/html-coding.png\" alt=\"Project Repository & Source Code\" title=\"Project Repository & Source Code\"/></div></a>\r\n                    <a href=\"https://github.com/Shubat-Max\" target=\"_blank\" rel=\"noopener noreferrer\"><div><img src=\"./assets/image/icon/github-logo.png\" alt=\"GitHub Account\" title=\"GitHub Account\"/></div></a>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import axios from 'axios';\r\nimport {\r\n    LOAD_CATEGORIES,\r\n    LOAD_IMAGES,\r\n    START,\r\n    SUCCESS,\r\n    FAILED, CHANGE_OBSERVABLE_CATEGORY\r\n} from '../constants/types';\r\n\r\nconst APIUrl = 'https://api.thecatapi.com/v1';\r\n\r\nexport function requestCategories(){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: LOAD_CATEGORIES + START\r\n        });\r\n\r\n        axios.get(`${APIUrl}/categories`)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: LOAD_CATEGORIES + SUCCESS,\r\n                    payload: { response }\r\n                });\r\n                dispatch({\r\n                    type: CHANGE_OBSERVABLE_CATEGORY,\r\n                    payload: { id: response.data[0].id }\r\n                });\r\n            })\r\n            .catch(error => dispatch({\r\n                type: LOAD_CATEGORIES + FAILED,\r\n                payload: { error }\r\n            }))\r\n    }\r\n}\r\n\r\nexport function request10ImagesByCategory(id){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: LOAD_IMAGES + START,\r\n            payload: { id }\r\n        });\r\n\r\n        axios.get(`${APIUrl}/images/search?limit=10&category_ids=${id}`)\r\n            .then(response => dispatch({\r\n                type: LOAD_IMAGES + SUCCESS,\r\n                payload: { response }\r\n            }))\r\n            .catch(error => dispatch({\r\n                type: LOAD_IMAGES + FAILED,\r\n                payload: { error }\r\n            }))\r\n    };\r\n}\r\n\r\nexport function changeObservableCategory(id){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CHANGE_OBSERVABLE_CATEGORY,\r\n            payload: { id }\r\n        })\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {\r\n    requestCategories,\r\n    changeObservableCategory,\r\n    request10ImagesByCategory\r\n} from '../../actions'\r\nimport {connect} from \"react-redux\";\r\nimport {mapToArr} from \"../../helpers\";\r\n\r\nclass Categories extends Component {\r\n    componentDidMount() {\r\n        this.props.requestCategories();\r\n    }\r\n\r\n\r\n    render() {\r\n        return this.getBody();\r\n    }\r\n\r\n    getBody = () => {\r\n        const {loaded, loading, categories, observableCategory} = this.props;\r\n\r\n        if(loaded && !loading && categories.size !== 0 && observableCategory !== null ){\r\n            return (\r\n                <div className={'category--block'}>\r\n                    {this.getCategories()}\r\n                </div>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n    };\r\n\r\n    getCategories = () => {\r\n        const { categories, observableCategory } = this.props;\r\n\r\n        return mapToArr(categories).sort((a,b) => {\r\n            if(a.name < b.name) return -1;\r\n            if(a.name > b.name) return 1;\r\n            return 0;\r\n        }).map(category => {\r\n            return (\r\n                <div className={'category--item--outline'} key={category.id} onClick={() => this.onClickHandler(category.id)}>\r\n                    <div className={`category--item--content${observableCategory === category.id ? \"--active\":\"\"}`}>\r\n                        {category.name}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    };\r\n\r\n    onClickHandler = id => {\r\n        this.props.changeObservableCategory(id);\r\n        if(!mapToArr(this.props.images).filter(image => image.categories[0].id === id).length){\r\n            this.props.request10ImagesByCategory(id);\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(store => {\r\n    return {\r\n        categories: store.categories.entities,\r\n        loading: store.categories.loading,\r\n        loaded: store.categories.loaded,\r\n        images: store.images.entities,\r\n        observableCategory: store.settings.observableCategory\r\n    }\r\n},{\r\n    requestCategories,\r\n    changeObservableCategory,\r\n    request10ImagesByCategory\r\n})(Categories);","import React, {Component, Fragment} from 'react';\r\nimport {request10ImagesByCategory} from \"../../actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {mapToArr} from \"../../helpers\";\r\n\r\nclass MasonryGallery extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.galleryEnd = React.createRef();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.request10ImagesByCategory(this.props.observableCategory)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    render() {\r\n        return this.getBody();\r\n    }\r\n\r\n\r\n\r\n    getBody = () => {\r\n        return (\r\n            <Fragment>\r\n                <div className={'masonry-gallery'}>\r\n                    {this.getImages()}\r\n                </div>\r\n                {this.getLoadButton()}\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    getImages = () => {\r\n        const {loading, loaded, images, observableCategory} = this.props;\r\n        if((loaded && !loading) || images){\r\n            return mapToArr(images).filter(image => {\r\n                return image.categories[0].id === observableCategory\r\n            }).map(image => {\r\n                return (\r\n                    <div className={'masonry-gallery--item'} key={image.id}>\r\n                        <img src={image.url} alt=\"\"/>\r\n                    </div>\r\n                )\r\n            })\r\n        }else{\r\n            return <div>LOADING</div>\r\n        }\r\n    };\r\n\r\n    getLoadButton = () => {\r\n        const {loading, loaded} = this.props;\r\n        if(loaded && !loading){\r\n            return (\r\n                <div className={'loadmore--block'}>\r\n                    <div\r\n                        className={ 'loadmore--btn' }\r\n                        onClick={ this.onClickHandler }\r\n                        ref={ this.galleryEnd }\r\n                    >\r\n                        LOAD MORE\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div className={'loadmore--block'}>\r\n                    <div className={ 'loadmore--btn loadmore--loader' }\r\n                         ref={ this.galleryEnd }>\r\n                        <img src=\"./assets/image/gif/cat_loader.gif\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n\r\n\r\n    onClickHandler = () => {\r\n        this.props.request10ImagesByCategory(this.props.observableCategory);\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.galleryEnd.current.scrollIntoView({\r\n            behavior: 'smooth'\r\n        });\r\n    };\r\n}\r\n\r\nexport default connect(store => {\r\n    return {\r\n        observableCategory: store.settings.observableCategory,\r\n        images: store.images.entities,\r\n        loading: store.images.loading,\r\n        loaded: store.images.loaded\r\n    }\r\n},{\r\n    request10ImagesByCategory\r\n})(MasonryGallery);","import React, {Component, Fragment} from 'react';\r\n\r\nimport MainMenu from '../MainMenu';\r\nimport Categories from '../Categories';\r\nimport MasonryGallery from '../MasonryGallery';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nclass Wrapper extends Component {\r\n    render() {\r\n        return (\r\n            <div className={'wrapper'}>\r\n                <div className={'content'}>\r\n                    {this.getBody()}\r\n                </div>\r\n                <MainMenu />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getBody = () => {\r\n        if(this.props.observableCategory === null){\r\n            return <Categories />\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <Categories />\r\n                    <MasonryGallery />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(store => {\r\n    return {\r\n        observableCategory: store.settings.observableCategory\r\n    }\r\n})(Wrapper);","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from '../store';\nimport Wrapper from './Wrapper';\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Wrapper />\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './reset.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}